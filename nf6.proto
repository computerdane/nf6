syntax = "proto3";
option go_package = "github.com/computerdane/nf6/nf6";
package nf6;

message None {}

/*
  === API server listener (unencrypted) ===
*/

service Nf6Public {
  rpc CreateAccount (CreateAccount_Request) returns (CreateAccount_Reply) {}
  rpc GetCaCert (None) returns (GetCaCert_Reply) {}
  rpc GetGlobal (None) returns (GetGlobal_Reply) {}
}

message CreateAccount_Request {
  string email = 1;
  string sshPubKey = 2;
  string tlsPubKey = 3;
  optional string prefix6 = 4;
}

message CreateAccount_Reply {
  string cert = 1;
}

message GetCaCert_Reply {
  string caCert = 1;
}

message GetGlobal_Reply {
  string prefix6 = 1;
  int32 accountPrefix6Len = 2;
  string vipWgEndpoint = 3;
  string vipWgPubKey = 4;
}

/*
  === API server listener ===
*/

service Nf6 {
  // Users
  rpc GetAccount (None) returns (GetAccount_Reply) {}
  rpc UpdateAccount (UpdateAccount_Request) returns (None) {}

  rpc CreateHost (CreateHost_Request) returns (None) {}
  rpc GetHost (GetHost_Request) returns (GetHost_Reply) {}
  rpc ListHosts (None) returns (ListHosts_Reply) {}
  rpc UpdateHost (UpdateHost_Request) returns (None) {}

  rpc CreateRepo (CreateRepo_Request) returns (None) {}
  rpc GetRepo (GetRepo_Request) returns (GetRepo_Reply) {}
  rpc ListRepos (None) returns (ListRepos_Reply) {}
  rpc UpdateRepo (UpdateRepo_Request) returns (None) {}

  // Git server
  rpc GitServer_GetAccount (GitServer_GetAccount_Request) returns (GitServer_GetAccount_Reply) {}
  rpc GitServer_ListRepos (GitServer_ListRepos_Request) returns (GitServer_ListRepos_Reply) {}

  // VIP server
  rpc Vip_ListHosts (None) returns (Vip_ListHosts_Reply) {}
}

// Users

message GetAccount_Reply {
  string email = 1;
  string sshPubKey = 2;
  string tlsPubKey = 3;
  string prefix6 = 4;
}
message UpdateAccount_Request {
  optional string email = 1;
  optional string sshPubKey = 2;
  optional string tlsPubKey = 3;
  optional string prefix6 = 4;
}

message CreateHost_Request {
  string name = 1;
  optional string addr6 = 2;
  string wgPubKey = 3;
  optional string tlsPubKey = 4;
}
message GetHost_Request {
  string name = 1;
}
message GetHost_Reply {
  uint64 id = 1;
  string name = 2;
  string addr6 = 3;
  string wgPubKey = 4;
  optional string tlsPubKey = 5;
}
message ListHosts_Reply {
  repeated string names = 1;
}
message UpdateHost_Request {
  uint64 id = 1;
  optional string name = 2;
  optional string addr6 = 3;
  optional string wgPubKey = 4;
  optional string tlsPubKey = 5;
}

message CreateRepo_Request {
  string name = 1;
}
message GetRepo_Request {
  string name = 1;
}
message GetRepo_Reply {
  uint64 id = 1;
  string name = 2;
}
message ListRepos_Reply {
  repeated string names = 1;
}
message UpdateRepo_Request {
  uint64 id = 1;
  optional string name = 2;
}

// Git Server

message GitServer_GetAccount_Request {
  string sshPubKey = 1;
}
message GitServer_GetAccount_Reply {
  repeated string names = 1;
}

message GitServer_ListRepos_Request {
  uint64 accountId = 1;
}
message GitServer_ListRepos_Reply {
  repeated string names = 1;
}

// VIP server

message Vip_ListHosts_Reply {
  message Host {
    string addr6 = 1;
    string wgPubKey = 2;
  }
  repeated Host hosts = 1;
}

/*
  === VIP server listener ===
*/

service Nf6Vip {
  rpc CreateRoute (CreateRoute_Request) returns (None) {}
}

message CreateRoute_Request {
  string addr6 = 1;
  string wgPubKey = 2;
}
